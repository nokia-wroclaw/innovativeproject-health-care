// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditorsSectionContent should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditorsSectionContent
    editor={
      Object {
        "name": "John",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <Grid>
        <GridRow
          columns={2}
        >
          <GridColumn
            floated="left"
            width={13}
          >
            John
          </GridColumn>
          <GridColumn
            floated="right"
            textAlign="center"
            width={3}
          >
            <SectionIcon
              className="fa fa-minus-square-o"
              color="#E80000"
              onClick={[Function]}
            />
          </GridColumn>
        </GridRow>
      </Grid>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <GridRow
          columns={2}
        >
          <GridColumn
            floated="left"
            width={13}
          >
            John
          </GridColumn>
          <GridColumn
            floated="right"
            textAlign="center"
            width={3}
          >
            <SectionIcon
              className="fa fa-minus-square-o"
              color="#E80000"
              onClick={[Function]}
            />
          </GridColumn>
        </GridRow>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <GridColumn
              floated="left"
              width={13}
            >
              John
            </GridColumn>,
            <GridColumn
              floated="right"
              textAlign="center"
              width={3}
            >
              <SectionIcon
                className="fa fa-minus-square-o"
                color="#E80000"
                onClick={[Function]}
              />
            </GridColumn>,
          ],
          "columns": 2,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "John",
              "floated": "left",
              "width": 13,
            },
            "ref": null,
            "rendered": "John",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <SectionIcon
                className="fa fa-minus-square-o"
                color="#E80000"
                onClick={[Function]}
              />,
              "floated": "right",
              "textAlign": "center",
              "width": 3,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "fa fa-minus-square-o",
                "color": "#E80000",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <Grid>
          <GridRow
            columns={2}
          >
            <GridColumn
              floated="left"
              width={13}
            >
              John
            </GridColumn>
            <GridColumn
              floated="right"
              textAlign="center"
              width={3}
            >
              <SectionIcon
                className="fa fa-minus-square-o"
                color="#E80000"
                onClick={[Function]}
              />
            </GridColumn>
          </GridRow>
        </Grid>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <GridRow
            columns={2}
          >
            <GridColumn
              floated="left"
              width={13}
            >
              John
            </GridColumn>
            <GridColumn
              floated="right"
              textAlign="center"
              width={3}
            >
              <SectionIcon
                className="fa fa-minus-square-o"
                color="#E80000"
                onClick={[Function]}
              />
            </GridColumn>
          </GridRow>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <GridColumn
                floated="left"
                width={13}
              >
                John
              </GridColumn>,
              <GridColumn
                floated="right"
                textAlign="center"
                width={3}
              >
                <SectionIcon
                  className="fa fa-minus-square-o"
                  color="#E80000"
                  onClick={[Function]}
                />
              </GridColumn>,
            ],
            "columns": 2,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "John",
                "floated": "left",
                "width": 13,
              },
              "ref": null,
              "rendered": "John",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <SectionIcon
                  className="fa fa-minus-square-o"
                  color="#E80000"
                  onClick={[Function]}
                />,
                "floated": "right",
                "textAlign": "center",
                "width": 3,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "className": "fa fa-minus-square-o",
                  "color": "#E80000",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
