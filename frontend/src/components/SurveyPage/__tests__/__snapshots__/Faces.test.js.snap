// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Faces should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Faces />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <GridColumn
          computer={13}
          mobile={10}
          tablet={13}
        />,
        <GridColumn
          computer={3}
          mobile={6}
          tablet={3}
        >
          <div
            className="flex-space-evenly"
          >
            <i
              aria-hidden="true"
              className="fa fa-smile-o"
            />
            <i
              aria-hidden="true"
              className="fa fa-meh-o"
            />
            <i
              aria-hidden="true"
              className="fa fa-frown-o"
            />
          </div>
        </GridColumn>,
      ],
      "style": Object {
        "padding": 14,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "computer": 13,
          "mobile": 10,
          "tablet": 13,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <div
            className="flex-space-evenly"
          >
            <i
              aria-hidden="true"
              className="fa fa-smile-o"
            />
            <i
              aria-hidden="true"
              className="fa fa-meh-o"
            />
            <i
              aria-hidden="true"
              className="fa fa-frown-o"
            />
          </div>,
          "computer": 3,
          "mobile": 6,
          "tablet": 3,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <i
                aria-hidden="true"
                className="fa fa-smile-o"
              />,
              <i
                aria-hidden="true"
                className="fa fa-meh-o"
              />,
              <i
                aria-hidden="true"
                className="fa fa-frown-o"
              />,
            ],
            "className": "flex-space-evenly",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "aria-hidden": "true",
                "className": "fa fa-smile-o",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "aria-hidden": "true",
                "className": "fa fa-meh-o",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "aria-hidden": "true",
                "className": "fa fa-frown-o",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <GridColumn
            computer={13}
            mobile={10}
            tablet={13}
          />,
          <GridColumn
            computer={3}
            mobile={6}
            tablet={3}
          >
            <div
              className="flex-space-evenly"
            >
              <i
                aria-hidden="true"
                className="fa fa-smile-o"
              />
              <i
                aria-hidden="true"
                className="fa fa-meh-o"
              />
              <i
                aria-hidden="true"
                className="fa fa-frown-o"
              />
            </div>
          </GridColumn>,
        ],
        "style": Object {
          "padding": 14,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "computer": 13,
            "mobile": 10,
            "tablet": 13,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <div
              className="flex-space-evenly"
            >
              <i
                aria-hidden="true"
                className="fa fa-smile-o"
              />
              <i
                aria-hidden="true"
                className="fa fa-meh-o"
              />
              <i
                aria-hidden="true"
                className="fa fa-frown-o"
              />
            </div>,
            "computer": 3,
            "mobile": 6,
            "tablet": 3,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <i
                  aria-hidden="true"
                  className="fa fa-smile-o"
                />,
                <i
                  aria-hidden="true"
                  className="fa fa-meh-o"
                />,
                <i
                  aria-hidden="true"
                  className="fa fa-frown-o"
                />,
              ],
              "className": "flex-space-evenly",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "aria-hidden": "true",
                  "className": "fa fa-smile-o",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "aria-hidden": "true",
                  "className": "fa fa-meh-o",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "aria-hidden": "true",
                  "className": "fa fa-frown-o",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
