// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SectionIcon should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SectionIcon />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "aria-hidden": "true",
      "className": undefined,
      "onClick": undefined,
      "style": Object {
        "color": undefined,
        "cursor": "pointer",
        "fontSize": "1.3em",
        "marginRight": 8,
      },
    },
    "ref": null,
    "rendered": null,
    "type": "i",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "aria-hidden": "true",
        "className": undefined,
        "onClick": undefined,
        "style": Object {
          "color": undefined,
          "cursor": "pointer",
          "fontSize": "1.3em",
          "marginRight": 8,
        },
      },
      "ref": null,
      "rendered": null,
      "type": "i",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
