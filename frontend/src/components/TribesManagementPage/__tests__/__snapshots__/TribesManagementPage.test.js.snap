// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TribesManagementPage should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TribesManagementPage
    tribes={
      Array [
        Object {
          "id": 1,
          "name": "tribe1",
        },
        Object {
          "id": 2,
          "name": "tribe2",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <Container>
        <Item
          style={
            Object {
              "margin": "1em 0",
            }
          }
        >
          <AddTribePopup />
          <Header
            as="h3"
          >
            Your tribes
          </Header>
        </Item>
        <Accordion
          className="tribes-accordion"
          exclusive={false}
          fluid={true}
          panels={
            Array [
              Object {
                "content": Object {
                  "content": <Connect(TribeDetails)
                    tribe={
                      Object {
                        "id": 1,
                        "name": "tribe1",
                      }
                    }
                  />,
                },
                "key": 1,
                "title": "tribe1",
              },
              Object {
                "content": Object {
                  "content": <Connect(TribeDetails)
                    tribe={
                      Object {
                        "id": 2,
                        "name": "tribe2",
                      }
                    }
                  />,
                },
                "key": 2,
                "title": "tribe2",
              },
            ]
          }
          styled={true}
        />
      </Container>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Item
            style={
              Object {
                "margin": "1em 0",
              }
            }
          >
            <AddTribePopup />
            <Header
              as="h3"
            >
              Your tribes
            </Header>
          </Item>,
          <Accordion
            className="tribes-accordion"
            exclusive={false}
            fluid={true}
            panels={
              Array [
                Object {
                  "content": Object {
                    "content": <Connect(TribeDetails)
                      tribe={
                        Object {
                          "id": 1,
                          "name": "tribe1",
                        }
                      }
                    />,
                  },
                  "key": 1,
                  "title": "tribe1",
                },
                Object {
                  "content": Object {
                    "content": <Connect(TribeDetails)
                      tribe={
                        Object {
                          "id": 2,
                          "name": "tribe2",
                        }
                      }
                    />,
                  },
                  "key": 2,
                  "title": "tribe2",
                },
              ]
            }
            styled={true}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <AddTribePopup />,
              <Header
                as="h3"
              >
                Your tribes
              </Header>,
            ],
            "style": Object {
              "margin": "1em 0",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "h3",
                "children": "Your tribes",
              },
              "ref": null,
              "rendered": "Your tribes",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "tribes-accordion",
            "exclusive": false,
            "fluid": true,
            "panels": Array [
              Object {
                "content": Object {
                  "content": <Connect(TribeDetails)
                    tribe={
                      Object {
                        "id": 1,
                        "name": "tribe1",
                      }
                    }
                  />,
                },
                "key": 1,
                "title": "tribe1",
              },
              Object {
                "content": Object {
                  "content": <Connect(TribeDetails)
                    tribe={
                      Object {
                        "id": 2,
                        "name": "tribe2",
                      }
                    }
                  />,
                },
                "key": 2,
                "title": "tribe2",
              },
            ],
            "styled": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <Container>
          <Item
            style={
              Object {
                "margin": "1em 0",
              }
            }
          >
            <AddTribePopup />
            <Header
              as="h3"
            >
              Your tribes
            </Header>
          </Item>
          <Accordion
            className="tribes-accordion"
            exclusive={false}
            fluid={true}
            panels={
              Array [
                Object {
                  "content": Object {
                    "content": <Connect(TribeDetails)
                      tribe={
                        Object {
                          "id": 1,
                          "name": "tribe1",
                        }
                      }
                    />,
                  },
                  "key": 1,
                  "title": "tribe1",
                },
                Object {
                  "content": Object {
                    "content": <Connect(TribeDetails)
                      tribe={
                        Object {
                          "id": 2,
                          "name": "tribe2",
                        }
                      }
                    />,
                  },
                  "key": 2,
                  "title": "tribe2",
                },
              ]
            }
            styled={true}
          />
        </Container>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Item
              style={
                Object {
                  "margin": "1em 0",
                }
              }
            >
              <AddTribePopup />
              <Header
                as="h3"
              >
                Your tribes
              </Header>
            </Item>,
            <Accordion
              className="tribes-accordion"
              exclusive={false}
              fluid={true}
              panels={
                Array [
                  Object {
                    "content": Object {
                      "content": <Connect(TribeDetails)
                        tribe={
                          Object {
                            "id": 1,
                            "name": "tribe1",
                          }
                        }
                      />,
                    },
                    "key": 1,
                    "title": "tribe1",
                  },
                  Object {
                    "content": Object {
                      "content": <Connect(TribeDetails)
                        tribe={
                          Object {
                            "id": 2,
                            "name": "tribe2",
                          }
                        }
                      />,
                    },
                    "key": 2,
                    "title": "tribe2",
                  },
                ]
              }
              styled={true}
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <AddTribePopup />,
                <Header
                  as="h3"
                >
                  Your tribes
                </Header>,
              ],
              "style": Object {
                "margin": "1em 0",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": "h3",
                  "children": "Your tribes",
                },
                "ref": null,
                "rendered": "Your tribes",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "tribes-accordion",
              "exclusive": false,
              "fluid": true,
              "panels": Array [
                Object {
                  "content": Object {
                    "content": <Connect(TribeDetails)
                      tribe={
                        Object {
                          "id": 1,
                          "name": "tribe1",
                        }
                      }
                    />,
                  },
                  "key": 1,
                  "title": "tribe1",
                },
                Object {
                  "content": Object {
                    "content": <Connect(TribeDetails)
                      tribe={
                        Object {
                          "id": 2,
                          "name": "tribe2",
                        }
                      }
                    />,
                  },
                  "key": 2,
                  "title": "tribe2",
                },
              ],
              "styled": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
